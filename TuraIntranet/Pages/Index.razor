@page "/"

@using System.DirectoryServices.AccountManagement
@using TuraIntranet.Authentication

@inject IJSRuntime JS
@inject PageNavigationService PageNavService
@inject VisitorsService VisitorsService
@inject AuthenticationStateProvider authStateProvider
@inject ActivityLoggerService ActivityService

<PageTitle>Index</PageTitle>

@*@attribute [Authorize(Roles = "User")]*@

<div id="content" class="main-content">
    <div class="layout-px-spacing">

        <div class="row layout-top-spacing">

            <div class="col-xl-12 col-lg-12 col-md-12 col-12 layout-spacing">
                <div class="widget widget-content-area br-4">
                    <div class="widget-one">

                        <h6>Welcome to Tura Intranet</h6>

                        @*<a class="btn btn-warning" @onclick="(() => OpenDialog())">Save</a>*@

                    </div>
                </div>
            </div>

            <AuthorizeView Roles="Administrator">
                <Authorized>
                    <div class="col-xl-12 col-lg-12 col-md-12 col-12 layout-spacing">
                        <div class="widget widget-content-area br-4">
                            <div class="widget-one">
                                <center><h6>Admin Info</h6></center>

                                <hr />

                                <div class="row">
                                    @if (this.loggedInUser == "Yad.Mohamad")
                                    {
                                        <div class="col-md-6">
                                            <div class="col-md-12">
                                                <h6><b>User Activities</b></h6>
                                            </div>

                                            <div class="col-md-12">
                                                <table class="table table-striped" style="width:100%;">
                                                    <thead class="thead-light">
                                                        <tr>
                                                            <th>Date</th>
                                                            <th>User</th>
                                                            <th>Action</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var activity in this.ActivityService.Activities)
                                                        {
                                                            <tr>
                                                                <td>@activity.Date</td>
                                                                <td>@activity.User</td>
                                                                <td>@activity.Action</td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    }

                                    <div class="col-md-6">
                                        <div class="col-md-12">
                                            <h6><b>Website Activity</b></h6>
                                            <p>Total website visits today: <b>@(this.VisitorsService.GetTotalWebsiteVisits() / 2)</b></p>
                                            <p>Total page visits today: <b>@(this.VisitorsService.GetTotalPageVisit())</b></p>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </Authorized>
            </AuthorizeView>

        </div>

    </div>
    <Footer />
</div>

@if (DialogIsOpen)
{
    <Dialog Caption=@caption
            Message="@message"
            OnClose="@OnDialogClose"
            Type="Dialog.Category.SaveNot"
            TakesInput="true"
            @ref="dialogRef">
    </Dialog>
}

@code {
    private Dialog? dialogRef = null;
    private string caption;
    private string message;
    private bool DialogIsOpen = false;

    private void OpenDialog()
    {
        caption = "Väntar Info";
        message = "Notering: ";
        DialogIsOpen = true;
    }
    private async Task OnDialogClose(bool isOk)
    {
        if (isOk)
        {
            if (this.dialogRef == null || string.IsNullOrEmpty(this.dialogRef.InputText))
            {
                return;
            }

            Console.WriteLine(this.dialogRef.InputText);
        }

        DialogIsOpen = false;
    }

    private string loggedInUser = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var loggedInUser = (Authentication.CustomAuthenticationStateProvider)authStateProvider;
        var state = await loggedInUser.GetAuthenticationStateAsync();
        this.loggedInUser = state?.User?.Identity?.Name ?? "";

        this.VisitorsService.IncrementPageVisit();
        this.PageNavService.UpdateActiveSection("");
        this.PageNavService.UpdateActivePage("Index");
    }

    public void login()
    {
        PrincipalContext context = new PrincipalContext(ContextType.Domain, "192.168.1.110", null, "npack", "hama");
        UserPrincipal user = new UserPrincipal(context);
        user.SamAccountName = "npack";
        PrincipalSearcher searcher = new PrincipalSearcher(user);
        var userPrincipal = searcher.FindOne();
        var userGroups = new List<string>();

        if (userPrincipal != null)
        {
            Console.WriteLine("Logged In");

            userGroups = userPrincipal.GetGroups(context).Select(x => x.Name).ToList();

            foreach (var group in userGroups)
            {
                Console.WriteLine(group);
            }

            if (!userGroups.Contains("Tura Intranet Users"))
            {
                //Saknar behörighet
            }
            else
            {

            }
        }
        else
        {
            Console.WriteLine("Not Logged In"); ;
        }

        this.StateHasChanged();
    }
}