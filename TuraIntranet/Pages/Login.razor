@using System.DirectoryServices.AccountManagement
@using TuraIntranet.Authentication

<PageTitle>Logga In</PageTitle>

@inject UserAccountService userAccountService
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

<button type="button" @onclick=onLogin>Login</button>

@code {
    private Models.LoginModel loginModel = new Models.LoginModel();
    string error = "";

    private async Task onLogin()
    {
        if (userAccountService.GetByUsername("npack", "hama", out UserAccount userAccount, out string error))
        {
            if (userAccount == null || userAccount.Password != loginModel.Password)
            {
                await js.InvokeVoidAsync("alert", "Invalid Username or Password.");
                this.loginModel.Username = string.Empty;
                this.loginModel.Password = string.Empty;
                return;
            }

            var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(new UserSession
                {
                    Username = userAccount.Username,
                    Role = userAccount.Role
                });

            this.error = error;
        }

        this.StateHasChanged();
    }
}
