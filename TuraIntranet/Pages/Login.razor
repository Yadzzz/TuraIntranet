@using System.DirectoryServices.AccountManagement
@using TuraIntranet.Authentication

<PageTitle>Logga In</PageTitle>

@inject UserAccountService userAccountService
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

@*<button type="button" @onclick=onLogin>Login</button>*@

<link href="assets/css/authentication/form-1.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="assets/css/forms/theme-checkbox-radio.css">
<link rel="stylesheet" type="text/css" href="assets/css/forms/switches.css">

<div class="form-container">
    <div class="form-form">
        <div class="form-form-wrap">
            <div class="form-container">
                <div class="form-content">

                    <div class="card">
                        <div class="card-body">

                            <div class="row">
                                <div class="col-md-12 mb-3">

                                    <h2>Sign In</h2>
                                    <p>Enter your username and password to login</p>

                                </div>
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Username</label>
                                        <input type="text" class="form-control" @bind-value=@loginModel.Username>
                                    </div>
                                </div>
                                <div class="col-12">
                                    <div class="mb-4">
                                        <label class="form-label">Password</label>
                                        <input type="password" class="form-control" @bind-value=@loginModel.Password>
                                    </div>
                                </div>

                                <div class="col-12">
                                    <div class="mb-4">
                                        <button class="btn btn-dark w-100" @onclick=onLogin>SIGN IN</button>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class="form-image">
        <div class="l-image">
        </div>
    </div>
</div>

@code {
    private Models.LoginModel loginModel = new Models.LoginModel();

    private async Task onLogin()
    {
        if(string.IsNullOrEmpty(this.loginModel.Username) || string.IsNullOrEmpty(this.loginModel.Password))
        {
            await js.InvokeVoidAsync("alert", "Please fill the required fields");
            return;
        }

        string error = string.Empty;
        //npack hama
        if (userAccountService.GetByUsername(this.loginModel.Username, this.loginModel.Password, out UserAccount userAccount, out error))
        {
            if (userAccount == null)
            {
                await js.InvokeVoidAsync("alert", error);
                this.loginModel.Username = string.Empty;
                this.loginModel.Password = string.Empty;

                return;
            }

            var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(new UserSession
                {
                    Username = userAccount.Username,
                    Role = userAccount.Role
                });
        }
        else
        {
            await js.InvokeVoidAsync("alert", error);
        }

        this.StateHasChanged();
    }

    public async Task Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            this.onLogin();
        }
    }
}
