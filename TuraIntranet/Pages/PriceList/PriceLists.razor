@page "/pricelist"

@inject PageNavigationService PageNavService
@inject IJSRuntime JS
@inject NavigationManager NavManager
@inject Services.NotificationService NotificationService
@inject VisitorsService VisitorsService
@inject Services.PriceList.PriceListService PriceListService

<PageTitle>Pris Lista</PageTitle>

<link rel="stylesheet" type="text/css" href="plugins/table/datatable/datatables.css">
<link rel="stylesheet" type="text/css" href="plugins/table/datatable/dt-global_style.css">

<div id="content" class="main-content">
    <div class="layout-px-spacing">

        <div class="row layout-top-spacing" id="cancel-row">

            <div class="col-xl-12 col-lg-12 col-sm-12  layout-spacing">
                <div class="widget-content widget-content-area br-6">

                    <br />
                    <center><h5>Prislista</h5></center>
                    <br />

                    <div class="form-group row" style="padding-left:25px;">
                        <div class="col-sm-2">
                            <label for="kundnumer">Kundnummer</label>
                            <input type="text" class="form-control form-control-sm" name="kundnummer" id="kundnummer" placeholder="Kundnummer" @bind-value="this.customerNo">
                        </div>

                        <div class="col-sm-2">
                            <label for="vendor">Vendor No</label>
                            <input type="text" class="form-control form-control-sm" name="vendor" id="vendor" placeholder="%%" @bind-value="this.vendorNo">
                        </div>

                        <div class="col-sm-2">
                            <label for="itemCategoryId">Item Category Code</label>
                            <input type="text" class="form-control form-control-sm" name="itemCategoryId" id="itemCategoryId" placeholder="%%" @bind-value="this.itemCategoryCode">
                        </div>

                        <div class="col-xl-2 col-md-4">
                            <label>Hämta Prislista</label>
                            <button class="btn btn-dark btn-block mb-4 mr-2" @onclick="this.Search">Sök</button>
                        </div>
                    </div>

                    @*@if (this.priceList != null && this.priceList.Count > 0)*@
                    {
                    <hr />

                    <div class="form-group row" style="padding-left:25px;">
                        <div class="col-xl-2 col-md-4">
                            <button class="btn btn-dark btn-block mb-4 mr-2" @onclick="this.DownloadExcel">Spara Excel</button>
                        </div>
                    </div>
                    }
                </div>
            </div>

            @if (this.priceList != null && this.priceList.Count > 0)
            {
                <PriceListTableComponent @ref="this.priceListTableComponentRef" PriceList="this.priceList" />

                @*<div class="col-xl-12 col-lg-12 col-sm-12  layout-spacing">
                        <div class="widget-content widget-content-area br-6">

                            <table id="zero-config" class="table table-striped" style="width:100%">
                                <thead>
                                    <tr>
                                        <th>Item Category</th>
                                        <th>Prod Group</th>
                                        <th>Item No</th>
                                        <th>Vendor Item No</th>
                                        <th>Description</th>
                                        <th>GTIN</th>
                                        <th>SRP SEK</th>
                                        <th>Sales Price SEK</th>
                                        <th>Discount %</th>
                                        <th>Your price SEK</th>
                                        <th>Fee Sum</th>
                                        <th>ActivityCode</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var row in this.priceList)
                                    {
                                        <tr>
                                            <td>@row.ItemCategoryDescrip</td>
                                            <td>@row.ProdGroupCodeDescrip</td>
                                            <td>@row.Item</td>
                                            <td>@row.VendorItemNo</td>
                                            <td>@row.Description</td>
                                            <td>@row.Gtin</td>
                                            <td>@row.PriceGroupRek</td>
                                            <td>@row.SalesPrice</td>
                                            <td>@row.LineDiscountPerc</td>
                                            <td>N/A</td>
                                            <td>@row.FeeSum</td>
                                            <td>@row.ActivityCode</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>*@
            }

        </div>

    </div>
    <Footer />
</div>

@code {
    private string customerNo = string.Empty;
    private string vendorNo = string.Empty;
    private string itemCategoryCode = string.Empty;
    private List<Data.PriceList.ViewTempPrisListExportSsr>? priceList;

    public PriceListTableComponent? priceListTableComponentRef = null;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            this.VisitorsService.IncrementPageVisit();
            this.PageNavService.UpdateActiveSection("");
            this.PageNavService.UpdateActivePage("PriceList");

            //await JS.InvokeVoidAsync("loadDataTableComponent");
        }
    }

    private async Task Search()
    {
        if (this.priceList != null && this.priceList.Count > 0)
        {
            this.priceList = null;
            this.priceListTableComponentRef = null;
        }

        if (string.IsNullOrEmpty(this.vendorNo))
        {
            this.vendorNo = "%%";
        }

        if (string.IsNullOrEmpty(this.itemCategoryCode))
        {
            this.itemCategoryCode = "%%";
        }

        this.priceList = await this.PriceListService.GetPriceList(this.customerNo, this.vendorNo, this.itemCategoryCode);
        this.customerNo = string.Empty;
        this.vendorNo = string.Empty;
        this.itemCategoryCode = string.Empty;
        this.StateHasChanged();

        if (this.priceList != null && this.priceList.Count > 0)
        {
            await this.NotificationService.AlertSuccess("Prislista Hämtad.");
        }
        else
        {
            await this.NotificationService.AlertError("Kunde inte hämta prislista.");
        }
    }

    private async Task DownloadExcel()
    {
        if(priceList == null || this.priceList.Count == 0)
        {
            Console.WriteLine("NULL OR EMPTY");
            return;
        }

        using (MemoryStream stream = this.PriceListService.CreateExcelStream(this.priceList))
        {
            try
            {
                await JS.InvokeAsync<object>(
               "saveFileType",
               "test.xlsx",
               Convert.ToBase64String(stream.ToArray()));
            }
            catch (Exception e)
            {
                //User disconnected?
                Console.WriteLine(e.ToString());
            }
        }
    }
}
