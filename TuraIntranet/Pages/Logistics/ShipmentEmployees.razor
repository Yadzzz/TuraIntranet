@page "/shipmentemployees";

@inject PageNavigationService PageNavService
@inject IJSRuntime JS
@inject NavigationManager NavManager
@inject Services.NotificationService NotificationService
@inject VisitorsService VisitorsService
@inject TuraIntranet.Services.Logistics.ShipmentService ShipmentService

<PageTitle>Visa Användare</PageTitle>

<link href="assets/css/apps/invoice-edit.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="plugins/dropify/dropify.min.css">
<link rel="stylesheet" type="text/css" href="assets/css/forms/theme-checkbox-radio.css">
<link href="plugins/flatpickr/flatpickr.css" rel="stylesheet" type="text/css">
<link href="plugins/flatpickr/custom-flatpickr.css" rel="stylesheet" type="text/css">

<link rel="stylesheet" type="text/css" href="plugins/table/datatable/datatables.css">
<link rel="stylesheet" type="text/css" href="plugins/table/datatable/dt-global_style.css">

<div id="content" class="main-content">
    <div class="layout-px-spacing">
        <div class="row invoice layout-top-spacing layout-spacing">
            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">

                <div class="doc-container">

                    <div class="row">
                        <div class="col-xl-5">

                            <div class="invoice-content">

                                <div class="invoice-detail-body">

                                    <div class="invoice-detail-header">

                                        <div class="row justify-content-between">

                                            <div class="col-xl-12 invoice-address-client">

                                                <div class="invoice-address-client-fields">

                                                    <div class="col-xl-12">
                                                        <select name="användare" class="form-control country_code  form-control-sm" @onchange=@OnChangeSelectedEmployee>
                                                            <option value="0">Välj Användare</option>
                                                            @if (this.shipmentEmployees != null)
                                                            {
                                                                foreach (var employee in this.shipmentEmployees)
                                                                {
                                                                    <option value="@employee.Id"> @(employee.FirstName + " " + employee.LastName)</option>
                                                                }
                                                            }
                                                        </select>
                                                        <br />
                                                    </div>

                                                    @if (this.selectedShipmentEmployee != null)
                                                    {
                                                        <div class="form-group row">
                                                            <label class="col-sm-3 col-form-label col-form-label-sm">Förnamn</label>
                                                            <div class="col-sm-9">
                                                                <input type="text" class="form-control form-control-sm" placeholder="Förnamn" @bind-value=@this.selectedShipmentEmployee.FirstName>
                                                            </div>
                                                        </div>

                                                        <div class="form-group row">
                                                            <label class="col-sm-3 col-form-label col-form-label-sm">Efternamn</label>
                                                            <div class="col-sm-9">
                                                                <input type="text" class="form-control form-control-sm" placeholder="Efternamn" @bind-value=@this.selectedShipmentEmployee.LastName>
                                                            </div>
                                                        </div>

                                                        @*<div class="form-group row">
                                                            <label class="col-sm-3 col-form-label col-form-label-sm">Inaktiverad</label>
                                                            <div class="col-sm-9">
                                                                <div class="custom-control custom-checkbox checkbox-info">
                                                                    <input type="checkbox" class="custom-control-input" id="IsUserDeleted" checked="@this.selectedShipmentEmployee.IsDeleted" @onclick=@OnclickIsUserDeleted>
                                                                    <label class="custom-control-label" for="IsUserDeleted"></label>
                                                                </div>
                                                            </div>
                                                        </div>*@
                                                    }

                                                </div>

                                            </div>

                                        </div>

                                    </div>

                                </div>
                            </div>
                        </div>

                        @if (this.selectedShipmentEmployee != null)
                        {
                            <div class="col-xl-3">
                                <div class="invoice-actions-btn">
                                    <div class="invoice-action-btn">
                                        <div class="row">
                                            <div class="col-xl-12 col-md-4">
                                                <button class="btn btn-dark btn-block mb-4 mr-2" @onclick=@Save>Uppdatera Användare</button>
                                            </div>
                                            <div class="col-xl-12 col-md-4">
                                                <button class="btn btn-dark btn-block mb-4 mr-2" @onclick=@Delete>Radera Användare</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
    <Footer />
</div>

@code {
    private Data.Logistics.Shipments.ShipmentEmployee? selectedShipmentEmployee;
    private List<TuraIntranet.Data.Logistics.Shipments.ShipmentEmployee>? shipmentEmployees;

    protected override async Task OnInitializedAsync()
    {
        this.VisitorsService.IncrementPageVisit();

        this.shipmentEmployees = await this.ShipmentService.GetShipmentEmployees();
        this.StateHasChanged();
    }

    private async Task Save()
    {
        if (this.selectedShipmentEmployee == null || string.IsNullOrEmpty(this.selectedShipmentEmployee.FirstName) || string.IsNullOrEmpty(this.selectedShipmentEmployee.LastName))
        {
            await this.NotificationService.AlertError("Fyll i alla kollumner");
            return;
        }

        await this.ShipmentService.UpdateShipmentEmployee(this.selectedShipmentEmployee);
        await this.NotificationService.AlertSuccess("Användare Uppdaterad");
        this.ShipmentService.FlushShipmentEmployees();
        this.shipmentEmployees = await this.ShipmentService.GetShipmentEmployees();
        this.selectedShipmentEmployee = null;
        this.StateHasChanged();
    }

    private async Task Delete()
    {
        if(this.selectedShipmentEmployee == null)
        {
            await this.NotificationService.AlertError("Välj Användare");
            return;
        }

        this.selectedShipmentEmployee.IsDeleted = true;
        await this.Save();
    }

    private void OnChangeSelectedEmployee(ChangeEventArgs e)
    {
        int id = int.Parse(e.Value.ToString());

        this.selectedShipmentEmployee = this.shipmentEmployees?.Where(x => x.Id == id).FirstOrDefault();
        this.StateHasChanged();
    }

    private void OnclickIsUserDeleted()
    {
        if(this.selectedShipmentEmployee == null)
        {
            this.NotificationService.AlertError("Error Code #SEB1049");
            return;
        }

        if(this.selectedShipmentEmployee.IsDeleted)
        {
            this.selectedShipmentEmployee.IsDeleted = false;
        }
        else
        {
            this.selectedShipmentEmployee.IsDeleted = false;
        }
    }
}