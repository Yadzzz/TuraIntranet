@page "/inleveranser"

@inject PageNavigationService PageNavService
@inject IJSRuntime JS
@inject NavigationManager NavManager
@inject TuraIntranet.Services.Logistics.ShipmentService ShipmentService
@inject NotificationService Notification
@inject DeviceDetectionService DeviceService
@inject VisitorsService VisitorsService

@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage BrowserStorage

<PageTitle>Intranet - Inleveranser</PageTitle>

<link rel="stylesheet" type="text/css" href="plugins/table/datatable/datatables.css">
<link rel="stylesheet" type="text/css" href="plugins/table/datatable/dt-global_style.css">
<link rel="stylesheet" type="text/css" href="plugins/table/datatable/custom_dt_html5.css">

<div id="content" class="main-content">
    <div class="layout-px-spacing">

        <div class="row layout-top-spacing">

            <div class="col-xl-12 col-lg-12 col-sm-12  layout-spacing">
                <div class="widget-content widget-content-area br-6">

                    <br />
                    <center><h5>Inleveranser</h5></center>
                    <br />
                    <br />

                    <div class="col-xl-2" style="float:left">
                        <div class="col-sm-12">
                            <div class="custom-control custom-checkbox checkbox-info">
                                <input type="checkbox" class="custom-control-input" id="showAll" checked="@this.showAll" @onclick=@this.OnclickShowAll>
                                <label class="custom-control-label" for="showAll">Visa Avslutade</label>
                            </div>
                        </div>
                    </div>

                    <div class="col-xl-2" style="float:left">
                        <div class="col-sm-12">
                            <div class="custom-control custom-checkbox checkbox-info">
                                <input type="checkbox" class="custom-control-input" id="showTURA" checked="@this.showTURA" @onclick=@this.OnclickShowTURA>
                                <label class="custom-control-label" for="showTURA">Visa TURA</label>
                            </div>
                        </div>
                    </div>

                    <div class="col-xl-2" style="float:left">
                        <div class="col-sm-12">
                            <div class="custom-control custom-checkbox checkbox-info">
                                <input type="checkbox" class="custom-control-input" id="showNI" checked="@this.showNI" @onclick=@this.OnClickShowNI>
                                <label class="custom-control-label" for="showNI">Visa NI</label>
                            </div>
                        </div>
                    </div>

                    <div class="col-xl-3" style="float:left">
                        <div class="col-sm-12">
                            <div class="custom-control custom-checkbox checkbox-info">
                                <input type="checkbox" class="custom-control-input" id="showActiveAndAwaitingInfo" checked="@this.showActiveAndAwaitingInfo" @onclick=@this.OnClickActiveAndAwaitingInfo>
                                <label class="custom-control-label" for="showActiveAndAwaitingInfo">Visa pågående / väntar info</label>
                            </div>
                        </div>
                    </div>

                    <div class="col-xl-3" style="float:right">
                        <select name="användare" class="form-control country_code  form-control-sm" @onchange=@OnChangeUpdatedById>
                            <option value="0">Välj användare</option>
                            @if (this.shipmentEmployees != null)
                            {
                                foreach (var employee in this.shipmentEmployees)
                                {
                                    if (employee.Id == this._updatedBy)
                                    {
                                        <option value="@employee.Id" selected>
                                            @(
                                                employee.FirstName + " " + employee.LastName
                                                )
                                        </option>
                                    }
                                    else
                                    {
                                        <option value="@employee.Id">
                                            @(
                                                employee.FirstName + " " + employee.LastName
                                                )
                                        </option>
                                    }
                                }
                            }
                        </select>
                        <br />
                    </div>

                    <br />
                    <br />
                    <hr />

                    @*<div class="col-xl-2 col-md-4">
                    <button class="btn btn-dark btn-block mb-4 mr-2" @onclick=@(() => this.NavManager.NavigateTo("/lagginleverans"))>Lägg till</button>
                    </div>*@

                    @if (this._shipments != null && this._shipments.Count > 0)
                    {
                        <table id="html5-extension" class="table table non-hover" style="width:100%;">
                            <thead>
                                <tr>
                                    @if (this.DeviceService.mobile)
                                    {
                                        <th style="font-size:9px;">Ankomst</th>
                                        <th style="font-size:9px;">Leverantör</th>
                                        <th style="font-size:9px;">Status</th>
                                        <th class="dt-no-sorting"></th>
                                    }
                                    else
                                    {
                                        <th>Ankomst</th>
                                        <th>Mottagare</th>
                                        <th>Mottaget Av</th>
                                        <th>Leverantör</th>
                                        <th>Ordernr</th>
                                        <th>Pall/Kollin</th>
                                        <th>Placering</th>
                                        <th>Status</th>
                                        <th>Uppdaterad</th>
                                        <th class="dt-no-sorting"></th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var shipment in this._shipments.Where(x => x.Shipment?.Prioritized == true && x.ShipmentUpdate?.StatusId != 4 && (this.showTURA ? true : x.Shipment.ReceivingCompany != 1) && (this.showNI ? true : x.Shipment.ReceivingCompany != 2) && (this.showActiveAndAwaitingInfo ? (x.ShipmentUpdate?.StatusId == 2 || x.ShipmentUpdate?.StatusId == 3) : true)).OrderBy(x => x.Shipment?.ReceivedAt))
                                {
                                    if (this.DeviceService.mobile)
                                    {
                                        <tr style="background-color:#742C2B;">
                                            <td style="color:white"><div style="max-width:100%; white-space:pre-line; font-size:8px;">@shipment.Shipment.ReceivedAt</div></td>
                                            <td style="color:white"><div style="max-width:100%; white-space:pre-line; font-size:8px;">@shipment.Shipment.Supplier</div></td>
                                            <td style="color:white"><div style="max-width:100%; white-space:pre-line; font-size:8px;">@this.ShipmentService.GetShipmentStatus(shipment.ShipmentUpdate.StatusId)</div></td>
                                            <td>
                                                <div class="btn-group">
                                                    @*<button type="button" class="btn btn-dark btn-sm" @onclick=@(() => ShowDelivery(shipment.Shipment.Id.ToString()))>Visa</button>*@
                                                    <button type="button" class="btn btn-dark btn-sm dropdown-toggle dropdown-toggle-split" id="dropdownMenuReference28" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" data-reference="parent">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-chevron-down"><polyline points="6 9 12 15 18 9"></polyline></svg>
                                                    </button>
                                                    <div class="dropdown-menu" aria-labelledby="dropdownMenuReference28">
                                                        <a class="dropdown-item" @onclick=@(() => ShowDelivery(shipment.Shipment.Id.ToString()))>Visa</a>
                                                        @if (shipment.Shipment.Prioritized.HasValue && shipment.Shipment.Prioritized.Value)
                                                        {
                                                            <a class="dropdown-item" @onclick=@(() => OnClickPrioritized(shipment))>Ta bort prioritering</a>
                                                        }
                                                        else
                                                        {
                                                            <a class="dropdown-item" @onclick=@(() => OnClickPrioritized(shipment))>Prioritera</a>
                                                        }

                                                        @if (shipment.ShipmentUpdate.StatusId == 2)
                                                        {
                                                            <a class="dropdown-item" @onclick=@(() => this.OnClickUpdateStatusId(shipment, 3))>Väntar Info</a>
                                                            <a class="dropdown-item" @onclick=@(() => this.OnClickUpdateStatusId(shipment, 1))>Återställ</a>
                                                            <a class="dropdown-item" @onclick=@(() => ShowDeviation(shipment.Shipment.Id.ToString()))>Lägg till avvikelse</a>
                                                            <div class="dropdown-divider"></div>
                                                            <a class="dropdown-item" @onclick=@(() => ShowDelivery(shipment.Shipment.Id.ToString()))>Avsluta</a>
                                                        }
                                                        else
                                                        {
                                                            <a class="dropdown-item" @onclick=@(() => this.OnClickUpdateStatusId(shipment, 2))>Påbörja</a>
                                                            <a class="dropdown-item" @onclick=@(() => ShowDeviation(shipment.Shipment.Id.ToString()))>Lägg till avvikelse</a>
                                                        }
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                    else
                                    {
                                        @*if (shipment.Shipment.Prioritized.HasValue && shipment.Shipment.Prioritized.Value == true)*@
                                        <tr style="background-color:#742C2B;">
                                            <td style="color:white"><div style="max-width:100%; white-space:pre-line;">@shipment.Shipment.ReceivedAt</div></td>
                                            <td style="color:white"><div style="max-width:100%; white-space:pre-line;">@(shipment.Shipment.ReceivingCompany == 1 ? "Tura" : "NI")</div></td>
                                            <td style="color:white"><div style="max-width:100%; white-space:pre-line;">@this.ShipmentService.GetShipmentEmployee(shipment.Shipment.ReceivedBy.Value)</div></td>
                                            <td style="color:white"><div style="max-width:100%; white-space:pre-line;">@shipment.Shipment.Supplier</div></td>
                                            @*<td style="color:black"><div style="max-width:50px; white-space:pre-line;">@shipment.Shipment.OrderNumbers</div></td>*@
                                            <td style="color:white">
                                                <div style="max-width:150px; white-space:pre-line; overflow:hidden">
                                                    @shipment.Shipment.OrderNumbers
                                                    @if (shipment.Shipment.OrderNumbers.Length > 15)
                                                    {
                                                        <div>...</div>
                                                    }
                                                </div>
                                            </td>
                                            <td style="color:white">
                                                @(
                                                    (shipment.Shipment.NumberOfPallets ?? 0) + " / " + (shipment.Shipment.NumberOfPackages ?? 0)
                                                    )
                                            </td>
                                            <td style="color:white">@shipment.Shipment.Placement</td>
                                            <td style="color:white">@this.ShipmentService.GetShipmentStatus(shipment.ShipmentUpdate.StatusId)</td>
                                            <td style="color:white"><div style="max-width:100%; white-space:pre-line;">@shipment.ShipmentUpdate.UpdatedAt</div></td>
                                            <td>
                                                <div class="btn-group">
                                                    <button type="button" class="btn btn-dark btn-sm" @onclick=@(() => ShowDelivery(shipment.Shipment.Id.ToString()))>Visa</button>
                                                    <button type="button" class="btn btn-dark btn-sm dropdown-toggle dropdown-toggle-split" id="dropdownMenuReference28" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" data-reference="parent">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-chevron-down"><polyline points="6 9 12 15 18 9"></polyline></svg>
                                                    </button>
                                                    <div class="dropdown-menu" aria-labelledby="dropdownMenuReference28">
                                                        @if (shipment.Shipment.Prioritized.HasValue && shipment.Shipment.Prioritized.Value)
                                                        {
                                                            <a class="dropdown-item" @onclick=@(() => OnClickPrioritized(shipment))>Ta bort prioritering</a>
                                                        }
                                                        else
                                                        {
                                                            <a class="dropdown-item" @onclick=@(() => OnClickPrioritized(shipment))>Prioritera</a>
                                                        }

                                                        @if (shipment.ShipmentUpdate.StatusId == 2)
                                                        {
                                                            <a class="dropdown-item" @onclick=@(() => this.OnClickUpdateStatusId(shipment, 3))>Väntar Info</a>
                                                            <a class="dropdown-item" @onclick=@(() => this.OnClickUpdateStatusId(shipment, 1))>Återställ</a>
                                                            <a class="dropdown-item" @onclick=@(() => ShowDeviation(shipment.Shipment.Id.ToString()))>Lägg till avvikelse</a>
                                                            <div class="dropdown-divider"></div>
                                                            <a class="dropdown-item" @onclick=@(() => ShowDelivery(shipment.Shipment.Id.ToString()))>Avsluta</a>
                                                        }
                                                        else
                                                        {
                                                            <a class="dropdown-item" @onclick=@(() => this.OnClickUpdateStatusId(shipment, 2))>Påbörja</a>
                                                            <a class="dropdown-item" @onclick=@(() => ShowDeviation(shipment.Shipment.Id.ToString()))>Lägg till avvikelse</a>
                                                        }
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }

                                @foreach (var shipment in this._shipments.Where(x => x.Shipment?.Prioritized == false && x.ShipmentUpdate?.StatusId != 4 && (this.showTURA ? true : x.Shipment.ReceivingCompany != 1) && (this.showNI ? true : x.Shipment.ReceivingCompany != 2) && (this.showActiveAndAwaitingInfo ? (x.ShipmentUpdate?.StatusId == 2 || x.ShipmentUpdate?.StatusId == 3) : true)).OrderBy(x => x.Shipment?.ReceivedAt))
                                {
                                    if (this.DeviceService.mobile)
                                    {
                                        <tr>
                                            <td><div style="max-width:100%; white-space:pre-line; font-size:8px;">@shipment.Shipment.ReceivedAt</div></td>
                                            <td><div style="max-width:100%; white-space:pre-line; font-size:8px;">@shipment.Shipment.Supplier</div></td>
                                            <td><div style="max-width:100%; white-space:pre-line; font-size:8px;">@this.ShipmentService.GetShipmentStatus(shipment.ShipmentUpdate.StatusId)</div></td>
                                            <td>
                                                <div class="btn-group">
                                                    @*<button type="button" class="btn btn-dark btn-sm" @onclick=@(() => ShowDelivery(shipment.Shipment.Id.ToString()))>Visa</button>*@
                                                    <button type="button" class="btn btn-dark btn-sm dropdown-toggle dropdown-toggle-split" id="dropdownMenuReference28" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" data-reference="parent">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-chevron-down"><polyline points="6 9 12 15 18 9"></polyline></svg>
                                                    </button>
                                                    <div class="dropdown-menu" aria-labelledby="dropdownMenuReference28">
                                                        <a class="dropdown-item" @onclick=@(() => ShowDelivery(shipment.Shipment.Id.ToString()))>Visa</a>
                                                        @if (shipment.Shipment.Prioritized.HasValue && shipment.Shipment.Prioritized.Value)
                                                        {
                                                            <a class="dropdown-item" @onclick=@(() => OnClickPrioritized(shipment))>Ta bort prioritering</a>
                                                        }
                                                        else
                                                        {
                                                            <a class="dropdown-item" @onclick=@(() => OnClickPrioritized(shipment))>Prioritera</a>
                                                        }

                                                        @if (shipment.ShipmentUpdate.StatusId == 2)
                                                        {
                                                            <a class="dropdown-item" @onclick=@(() => this.OnClickUpdateStatusId(shipment, 3))>Väntar Info</a>
                                                            <a class="dropdown-item" @onclick=@(() => this.OnClickUpdateStatusId(shipment, 1))>Återställ</a>
                                                            <a class="dropdown-item" @onclick=@(() => ShowDeviation(shipment.Shipment.Id.ToString()))>Lägg till avvikelse</a>
                                                            <div class="dropdown-divider"></div>
                                                            <a class="dropdown-item" @onclick=@(() => ShowDelivery(shipment.Shipment.Id.ToString()))>Avsluta</a>
                                                        }
                                                        else
                                                        {
                                                            <a class="dropdown-item" @onclick=@(() => this.OnClickUpdateStatusId(shipment, 2))>Påbörja</a>
                                                            <a class="dropdown-item" @onclick=@(() => ShowDeviation(shipment.Shipment.Id.ToString()))>Lägg till avvikelse</a>
                                                        }
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                    else
                                    {
                                        <tr>
                                            <td><div style="max-width:100%; white-space:pre-line;">@shipment.Shipment.ReceivedAt</div></td>
                                            <td style="color:black"><div style="max-width:100%; white-space:pre-line;">@(shipment.Shipment.ReceivingCompany == 1 ? "Tura" : "NI")</div></td>
                                            <td>@this.ShipmentService.GetShipmentEmployee(shipment.Shipment.ReceivedBy.Value)</td>
                                            <td><div style="max-width:100%; white-space:pre-line;">@shipment.Shipment.Supplier</div></td>
                                            <td>
                                                <div style="max-width:150px; white-space:pre-line; overflow:hidden">
                                                    @shipment.Shipment.OrderNumbers
                                                    @if (shipment.Shipment.OrderNumbers.Length > 15)
                                                    {
                                                        <div>...</div>
                                                    }
                                                </div>
                                            </td>
                                            <td>
                                                @(
                                                    (shipment.Shipment.NumberOfPallets ?? 0) + " / " + (shipment.Shipment.NumberOfPackages ?? 0)
                                                    )
                                            </td>
                                            <td>@shipment.Shipment.Placement</td>
                                            <td>@this.ShipmentService.GetShipmentStatus(shipment.ShipmentUpdate.StatusId)</td>
                                            <td><div style="max-width:100%; white-space:pre-line;">@shipment.ShipmentUpdate.UpdatedAt</div></td>
                                            <td>
                                                <div class="btn-group">
                                                    <button type="button" class="btn btn-dark btn-sm" @onclick=@(() => ShowDelivery(shipment.Shipment.Id.ToString()))>Visa</button>
                                                    <button type="button" class="btn btn-dark btn-sm dropdown-toggle dropdown-toggle-split" id="dropdownMenuReference28" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" data-reference="parent">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-chevron-down"><polyline points="6 9 12 15 18 9"></polyline></svg>
                                                    </button>
                                                    <div class="dropdown-menu" aria-labelledby="dropdownMenuReference28">
                                                        @if (shipment.Shipment.Prioritized.HasValue && shipment.Shipment.Prioritized.Value)
                                                        {
                                                            <a class="dropdown-item" @onclick=@(() => OnClickPrioritized(shipment))>Ta bort prioritering</a>
                                                        }
                                                        else
                                                        {
                                                            <a class="dropdown-item" @onclick=@(() => OnClickPrioritized(shipment))>Prioritera</a>
                                                        }

                                                        @if (shipment.ShipmentUpdate.StatusId == 2)
                                                        {
                                                            <a class="dropdown-item" @onclick=@(() => this.OnClickUpdateStatusId(shipment, 3))>Väntar Info</a>
                                                            <a class="dropdown-item" @onclick=@(() => this.OnClickUpdateStatusId(shipment, 1))>Återställ</a>
                                                            <a class="dropdown-item" @onclick=@(() => ShowDeviation(shipment.Shipment.Id.ToString()))>Lägg till avvikelse</a>
                                                            <div class="dropdown-divider"></div>
                                                            <a class="dropdown-item" @onclick=@(() => ShowDelivery(shipment.Shipment.Id.ToString()))>Avsluta</a>
                                                        }
                                                        else
                                                        {
                                                            <a class="dropdown-item" @onclick=@(() => this.OnClickUpdateStatusId(shipment, 2))>Påbörja</a>
                                                            <a class="dropdown-item" @onclick=@(() => ShowDeviation(shipment.Shipment.Id.ToString()))>Lägg till avvikelse</a>
                                                        }
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }

                                @if (this.showAll)
                                {
                                    @foreach (var shipment in this._shipments.Where(x => x.ShipmentUpdate?.StatusId == 4 && (this.showTURA ? true : x.Shipment.ReceivingCompany != 1) && (this.showNI ? true : x.Shipment.ReceivingCompany != 2) && (this.showActiveAndAwaitingInfo ? (x.ShipmentUpdate?.StatusId == 2 || x.ShipmentUpdate?.StatusId == 3) : true)).OrderBy(x => x.Shipment?.ReceivedAt))
                                    {
                                        if (this.DeviceService.mobile)
                                        {
                                            <tr style="background-color:#dcedc9;">
                                                <td><div style="max-width:100%; white-space:pre-line; font-size:8px;">@shipment.Shipment.ReceivedAt</div></td>
                                                <td><div style="max-width:100%; white-space:pre-line; font-size:8px;">@shipment.Shipment.Supplier</div></td>
                                                <td><div style="max-width:100%; white-space:pre-line; font-size:8px;">@this.ShipmentService.GetShipmentStatus(shipment.ShipmentUpdate.StatusId)</div></td>
                                                <td>
                                                    <div class="btn-group">
                                                        @*<button type="button" class="btn btn-dark btn-sm" @onclick=@(() => ShowDelivery(shipment.Shipment.Id.ToString()))>Visa</button>*@
                                                        <button type="button" class="btn btn-dark btn-sm dropdown-toggle dropdown-toggle-split" id="dropdownMenuReference28" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" data-reference="parent">
                                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-chevron-down"><polyline points="6 9 12 15 18 9"></polyline></svg>
                                                        </button>
                                                        <div class="dropdown-menu" aria-labelledby="dropdownMenuReference28">
                                                            <a class="dropdown-item" @onclick=@(() => ShowDelivery(shipment.Shipment.Id.ToString()))>Visa</a>
                                                            @if (shipment.Shipment.Prioritized.HasValue && shipment.Shipment.Prioritized.Value)
                                                            {
                                                                <a class="dropdown-item" @onclick=@(() => OnClickPrioritized(shipment))>Ta bort prioritering</a>
                                                            }
                                                            else
                                                            {
                                                                <a class="dropdown-item" @onclick=@(() => OnClickPrioritized(shipment))>Prioritera</a>
                                                            }

                                                            @if (shipment.ShipmentUpdate.StatusId == 2)
                                                            {
                                                                <a class="dropdown-item" @onclick=@(() => this.OnClickUpdateStatusId(shipment, 3))>Väntar Info</a>
                                                                <a class="dropdown-item" @onclick=@(() => this.OnClickUpdateStatusId(shipment, 1))>Återställ</a>
                                                                <a class="dropdown-item" @onclick=@(() => ShowDeviation(shipment.Shipment.Id.ToString()))>Lägg till avvikelse</a>
                                                                <div class="dropdown-divider"></div>
                                                                <a class="dropdown-item" @onclick=@(() => ShowDelivery(shipment.Shipment.Id.ToString()))>Avsluta</a>
                                                            }
                                                            else
                                                            {
                                                                <a class="dropdown-item" @onclick=@(() => this.OnClickUpdateStatusId(shipment, 2))>Påbörja</a>
                                                                <a class="dropdown-item" @onclick=@(() => ShowDeviation(shipment.Shipment.Id.ToString()))>Lägg till avvikelse</a>
                                                            }
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                        else
                                        {
                                            <tr style="background-color:#dcedc9;">
                                                <td><div style="max-width:100%; white-space:pre-line;">@shipment.Shipment.ReceivedAt</div></td>
                                                <td style="color:black">
                                                    <div style="max-width:100%; white-space:pre-line;">
                                                        @(
                                                            shipment.Shipment.ReceivingCompany == 1 ? "Tura" : "NI"
                                                            )
                                                    </div>
                                                </td>
                                                <td>@this.ShipmentService.GetShipmentEmployee(shipment.Shipment.ReceivedBy.Value)</td>
                                                <td><div style="max-width:100%; white-space:pre-line;">@shipment.Shipment.Supplier</div></td>
                                                <td>
                                                    <div style="max-width:150px; white-space:pre-line; overflow:hidden">
                                                        @shipment.Shipment.OrderNumbers
                                                        @if (shipment.Shipment.OrderNumbers.Length > 15)
                                                        {
                                                            <div>...</div>
                                                        }
                                                    </div>
                                                </td>
                                                <td>
                                                    @(
                                                        (shipment.Shipment.NumberOfPallets ?? 0) + " / " + (shipment.Shipment.NumberOfPackages ?? 0)
                                                        )
                                                </td>
                                                <td>@shipment.Shipment.Placement</td>
                                                <td>@this.ShipmentService.GetShipmentStatus(shipment.ShipmentUpdate.StatusId)</td>
                                                <td><div style="max-width:100%; white-space:pre-line;">@shipment.ShipmentUpdate.UpdatedAt</div></td>
                                                <td>
                                                    <div class="btn-group">
                                                        <button type="button" class="btn btn-dark btn-sm" @onclick=@(() => ShowDelivery(shipment.Shipment.Id.ToString()))>Visa</button>
                                                        <button type="button" class="btn btn-dark btn-sm dropdown-toggle dropdown-toggle-split" id="dropdownMenuReference28" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" data-reference="parent">
                                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-chevron-down"><polyline points="6 9 12 15 18 9"></polyline></svg>
                                                        </button>
                                                        <div class="dropdown-menu" aria-labelledby="dropdownMenuReference28">
                                                            @if (shipment.Shipment.Prioritized.HasValue && shipment.Shipment.Prioritized.Value)
                                                            {
                                                                <a class="dropdown-item" @onclick=@(() => OnClickPrioritized(shipment))>Ta bort prioritering</a>
                                                            }
                                                            else
                                                            {
                                                                <a class="dropdown-item" @onclick=@(() => OnClickPrioritized(shipment))>Prioritera</a>
                                                            }

                                                            @if (shipment.ShipmentUpdate.StatusId == 2)
                                                            {
                                                                <a class="dropdown-item" @onclick=@(() => this.OnClickUpdateStatusId(shipment, 3))>Väntar Info</a>
                                                                <a class="dropdown-item" @onclick=@(() => this.OnClickUpdateStatusId(shipment, 1))>Återställ</a>
                                                                <a class="dropdown-item" @onclick=@(() => ShowDeviation(shipment.Shipment.Id.ToString()))>Lägg till avvikelse</a>
                                                                <div class="dropdown-divider"></div>
                                                                <a class="dropdown-item" @onclick=@(() => ShowDelivery(shipment.Shipment.Id.ToString()))>Avsluta</a>
                                                            }
                                                            else
                                                            {
                                                                <a class="dropdown-item" @onclick=@(() => this.OnClickUpdateStatusId(shipment, 2))>Påbörja</a>
                                                                <a class="dropdown-item" @onclick=@(() => ShowDeviation(shipment.Shipment.Id.ToString()))>Lägg till avvikelse</a>
                                                            }
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    }
                                }
                            </tbody>
                        </table>
                    }
                    else if (this.isLoading)
                    {
                        <center>
                            <div class="col-xl-2 col-md-4">
                                <div class="spinner-border spinner-border-reverse align-self-center text-dark">Laddar...</div>
                            </div>
                        </center>

                        <br />
                    }
                </div>
            </div>

        </div>

    </div>
    <Footer />
</div>

@code {
    private List<TuraIntranet.Data.Logistics.Shipments.ShipmentModel>? _shipments;
    private List<TuraIntranet.Data.Logistics.Shipments.ShipmentEmployee>? shipmentEmployees;
    private int _updatedBy = 0;
    private bool showAll = false;
    private bool showTURA = true;
    private bool showNI = true;
    private bool showActiveAndAwaitingInfo = false;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        this.VisitorsService.IncrementPageVisit();
        this.PageNavService.UpdateActiveSection("Logistik");
        this.PageNavService.UpdateActivePage("Inleveranser");

        //this.isLoading = true;
        //this.StateHasChanged();
        await this.GetShipments();
        this.shipmentEmployees = await this.ShipmentService.GetShipmentEmployees();

        var selectedEmployeeId = await this.BrowserStorage.GetAsync<int>("SelectedEmployeeId");
        this._updatedBy = selectedEmployeeId.Success ? selectedEmployeeId.Value : 0;

        this.isLoading = false;
        this.StateHasChanged();

        //await JS.InvokeVoidAsync("loadDataTableComponent");
    }

    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //{
    //    if (firstRender)
    //    {
    //        this.PageNavService.UpdateActiveSection("Logistik");
    //        this.PageNavService.UpdateActivePage("Inleveranser");

    //        await this.GetShipments();
    //        this.StateHasChanged();

    //        //await JS.InvokeVoidAsync("loadDataTableHtml5Component");
    //        //await JS.InvokeVoidAsync("OnScrollEvent");
    //    }
    //}

    private void OnclickShowAll()
    {
        if (this.showAll)
        {
            this.showAll = false;
        }
        else
        {
            this.showAll = true;
        }

        this.StateHasChanged();
    }

    private void OnclickShowTURA()
    {
        if (this.showTURA)
        {
            this.showTURA = false;
        }
        else
        {
            this.showTURA = true;
        }

        this.StateHasChanged();
    }

    private void OnClickShowNI()
    {
        if (this.showNI)
        {
            this.showNI = false;
        }
        else
        {
            this.showNI = true;
        }

        this.StateHasChanged();
    }

    private void OnClickActiveAndAwaitingInfo()
    {
        if (this.showActiveAndAwaitingInfo)
        {
            this.showActiveAndAwaitingInfo = false;
        }
        else
        {
            this.showActiveAndAwaitingInfo = true;
        }

        this.StateHasChanged();
    }

    private void ShowDelivery(string delivery)
    {
        this.NavManager.NavigateTo("/inleverans/" + delivery);
    }

    private void ShowDeviation(string delivery)
    {
        this.NavManager.NavigateTo("inleveransdeviation/" + delivery);
    }

    private async Task GetShipments()
    {
        this._shipments = await this.ShipmentService.GetShipments();
    }

    private async Task OnChangeUpdatedById(ChangeEventArgs e)
    {
        this._updatedBy = int.Parse(e.Value.ToString());

        try
        {
            await this.BrowserStorage.SetAsync("SelectedEmployeeId", this._updatedBy);
        }
        catch (Exception ex)
        {
        }
    }

    private void SaveShipment(TuraIntranet.Data.Logistics.Shipments.ShipmentModel shipment, int statusId, string note = "")
    {
        if (this._updatedBy == 0)
        {
            this.Notification.AlertError("Välj Användare först!");
            this.JS.InvokeVoidAsync("OnScrollEvent");
            return;
        }

        var shipmentUpdate = new TuraIntranet.Data.Logistics.Shipments.ShipmentUpdateData()
            {
                ShipmentId = shipment.Shipment.Id,
                UpdatedBy = this._updatedBy,
                UpdatedAt = DateTime.Now,
                StatusId = statusId,
                Note = note
            };

        this.ShipmentService.UpdateShipment(shipment);
        this.ShipmentService.AddUpdate(shipmentUpdate);

        shipment.ShipmentUpdates.Add(shipmentUpdate);
        shipment.ShipmentUpdate = shipmentUpdate;
        //this.ShipmentService.FlushShipments();
        this.StateHasChanged();
        this.Notification.AlertSuccess("Inleverans Uppdaterad");
    }

    private void OnClickPrioritized(TuraIntranet.Data.Logistics.Shipments.ShipmentModel shipment)
    {
        if (this._updatedBy == 0)
        {
            this.Notification.AlertError("Välj Användare först!");
            this.JS.InvokeVoidAsync("OnScrollEvent");
            return;
        }

        string note = string.Empty;
        if (shipment.Shipment.Prioritized.Value)
        {
            shipment.Shipment.Prioritized = false;
            note = "*NEDPRIORITERAD*";
        }
        else
        {
            shipment.Shipment.Prioritized = true;
            note = "*PRIORITERAD*";
        }

        this.SaveShipment(shipment, shipment.ShipmentUpdate.StatusId, note);
        this.StateHasChanged();
    }

    private void OnClickUpdateStatusId(TuraIntranet.Data.Logistics.Shipments.ShipmentModel shipment, int statusId)
    {
        if (this._updatedBy == 0)
        {
            this.Notification.AlertError("Välj Användare först!");
            this.JS.InvokeVoidAsync("OnScrollEvent");
            return;
        }

        var shipmentUpdate = new TuraIntranet.Data.Logistics.Shipments.ShipmentUpdateData()
            {
                ShipmentId = shipment.Shipment.Id,
                UpdatedBy = this._updatedBy,
                UpdatedAt = DateTime.Now,
                StatusId = statusId,
                Note = string.Empty
            };

        this.ShipmentService.AddUpdate(shipmentUpdate);
        shipment.ShipmentUpdates.Add(shipmentUpdate);
        shipment.ShipmentUpdate = shipmentUpdate;

        //this.SaveShipment(shipment, statusId);
        this.StateHasChanged();
        this.Notification.AlertSuccess("Inleverans Status uppdaterad");
    }
}
