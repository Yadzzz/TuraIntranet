@page "/network/{Id}"

@inject PageNavigationService PageNavService
@inject IJSRuntime JS
@inject NavigationManager NavManager
@inject TuraIntranet.Services.Network.NetworkService NetworkService

<PageTitle>Nätverk</PageTitle>

<link href="assets/css/apps/invoice-edit.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="plugins/dropify/dropify.min.css">
<link rel="stylesheet" type="text/css" href="assets/css/forms/theme-checkbox-radio.css">
<link href="plugins/flatpickr/flatpickr.css" rel="stylesheet" type="text/css">
<link href="plugins/flatpickr/custom-flatpickr.css" rel="stylesheet" type="text/css">

<link rel="stylesheet" type="text/css" href="plugins/table/datatable/datatables.css">
<link rel="stylesheet" type="text/css" href="plugins/table/datatable/dt-global_style.css">

<div id="content" class="main-content">
    <div class="layout-px-spacing">
        <div class="row invoice layout-top-spacing layout-spacing">
            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">

                <div class="doc-container">

                    <div class="row">
                        <div class="col-xl-6">

                            <div class="invoice-content">

                                <div class="invoice-detail-body">

                                    @if (this.network == null)
                                    {
                                        <p>Could not retrieve data</p>
                                    }
                                    else
                                    {
                                        <div class="invoice-detail-header">
                                            <div class="row justify-content-between">
                                                <div class="col-xl-12 invoice-address-client">
                                                    <div class="invoice-address-client-fields">
                                                        <div class="form-group row">
                                                            <label class="col-sm-3 col-form-label col-form-label-sm">IP-address</label>
                                                            <div class="col-sm-9">
                                                                <input type="text" class="form-control form-control-sm" placeholder="@(network.Ip1 + "." + network.Ip2 + "." + network.Ip3 + "." + network.Ip4)" disabled>
                                                            </div>
                                                        </div>

                                                        <div class="form-group row">
                                                            <label class="col-sm-3 col-form-label col-form-label-sm">Tilldelning</label>
                                                            <div class="col-sm-9">
                                                                <input type="text" class="form-control form-control-sm" placeholder="Tilldelning" @bind-value="@this.network.AssignedTo">
                                                            </div>
                                                        </div>

                                                        <div class="form-group row">
                                                            <label class="col-sm-3 col-form-label col-form-label-sm">Info</label>
                                                            <div class="col-sm-9">
                                                                <input type="text" class="form-control form-control-sm" placeholder="Info" @bind-value="@this.network.Info">
                                                            </div>
                                                        </div>

                                                        <div class="form-group row">
                                                            <label class="col-sm-3 col-form-label col-form-label-sm">Nätverk Id</label>
                                                            <div class="col-sm-9">
                                                                <input type="text" class="form-control form-control-sm" placeholder="@(this.network.NetworkId)" disabled>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }

                                </div>
                            </div>
                        </div>

                        <div class="col-xl-3">

                            <div class="invoice-actions-btn">
                                <div class="invoice-action-btn">
                                    <div class="row">
                                        <div class="col-xl-12 col-md-4">
                                            <button class="btn btn-dark btn-block mb-4 mr-2" @onclick=@Save>Spara</button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <Footer />
</div>

@code {
    [Parameter]
    public string? Id { get; set; }
    private TuraIntranet.Data.Networks.NetworkIp network { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            this.PageNavService.UpdateActiveSection("");
            this.PageNavService.UpdateActivePage("IT-Admin");

            if (!string.IsNullOrEmpty(this.Id))
            {
                if (int.TryParse(this.Id, out int id))
                {
                    this.network = await this.NetworkService.GetNetworkIp(id);
                    this.StateHasChanged();
                }
            }
        }
    }

    private async Task Save()
    {
        await this.NetworkService.UpdateNetworkIp(this.network);
        await this.AlertUser("Nätverk Uppdaterad");
    }

    private async Task AlertUser(string text)
    {
        try
        {
            await this.JS.InvokeVoidAsync("alert", text);
        }
        catch (Exception e)
        {

        }
    }
}
